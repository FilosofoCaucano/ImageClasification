{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willi\\\\Downloads\\\\ProyectoClasificadorImagenes\\\\NuevoClasificadorImagenesClima\\\\Frontend\\\\src\\\\components\\\\ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../styles.css'; // Importa el CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n    setResult(null);\n  };\n  const handleUpload = async () => {\n    if (!image) return alert('Selecciona una imagen.');\n    const formData = new FormData();\n    formData.append('file', image);\n    try {\n      setLoading(true);\n      console.log('Enviando imagen al backend...');\n      const response = await axios.post('http://localhost:5000/api/image-classification', formData);\n      setResult(response.data);\n    } catch (error) {\n      console.error('Error al procesar la imagen:', error);\n      alert('Error al procesar la imagen.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Clasificador de Im\\xE1genes Clim\\xE1ticas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? 'Cargando...' : 'Clasificar Imagen'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Clase: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: result.class\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Confianza: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [result.confidence, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageUploader, \"hGSBeEgscpzKOEr0xah/Ve/NZiI=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploader","_s","image","setImage","result","setResult","loading","setLoading","handleImageChange","e","target","files","handleUpload","alert","formData","FormData","append","console","log","response","post","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","class","confidence","_c","$RefreshReg$"],"sources":["C:/Users/Willi/Downloads/ProyectoClasificadorImagenes/NuevoClasificadorImagenesClima/Frontend/src/components/ImageUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles.css';  // Importa el CSS\r\n\r\nconst ImageUploader = () => {\r\n    const [image, setImage] = useState(null);\r\n    const [result, setResult] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleImageChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n        setResult(null);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!image) return alert('Selecciona una imagen.');\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', image);\r\n\r\n        try {\r\n            setLoading(true);\r\n            console.log('Enviando imagen al backend...');\r\n            const response = await axios.post('http://localhost:5000/api/image-classification', formData);\r\n            setResult(response.data);\r\n        } catch (error) {\r\n            console.error('Error al procesar la imagen:', error);\r\n            alert('Error al procesar la imagen.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Clasificador de Imágenes Climáticas</h1>\r\n            <input type=\"file\" onChange={handleImageChange} />\r\n            <button onClick={handleUpload} disabled={loading}>\r\n                {loading ? 'Cargando...' : 'Clasificar Imagen'}\r\n            </button>\r\n            {result && (\r\n                <div className=\"result\">\r\n                    <p>Clase: <strong>{result.class}</strong></p>\r\n                    <p>Confianza: <strong>{result.confidence}%</strong></p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}